<?xml version="1.0" encoding="UTF-8"?>
<project name="werti" default="compile" basedir=".">
	<!-- custom properties -->
	<property file="build.properties"/>
	<property file="${user.home}/build.properties"/>

	<!-- file locations. Don't change most of this, except site-specific stuff -->
	<property name="app.name"      value="werti"/>
	<property name="app.path"      value="/${app.name}"/>
	<property name="app.version"   value="0.1-dev"/>
	<property name="build.home"    value="${basedir}/bin"/>
	<property name="catalina.home" value="/usr/share/tomcat5.5"/>
	<property name="dist.home"     value="${basedir}/dist"/>
	<property name="docs.home"     value="${basedir}/docs"/>
	<property name="manager.url"   value="http://localhost:8180/manager"/>
	<property name="manager.username" value="manager"/>
	<property name="manager.password" value="_c,f0D"/>
	<property name="src.home"      value="${basedir}/src"/>
	<property name="web.home"      value="${basedir}/www"/>


	<!-- Task definitions -->
	<taskdef name="deploy"   classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="list"     classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload"   classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>


	<!--  Compilation Control Options -->

	<property name="compile.debug"       value="true"/>
	<property name="compile.deprecation" value="false"/>
	<property name="compile.optimize"    value="true"/>
	<property name="target.version"      value="1.6"/>


	<!-- Compilation Classpath -->
	<path id="compile.classpath">

		<!-- Include all elements that Tomcat exposes to applications -->
		<pathelement location="${catalina.home}/common/classes"/>
		<fileset dir="${catalina.home}/common/endorsed">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${catalina.home}/common/lib">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${catalina.home}/shared/classes"/>
		<fileset dir="${catalina.home}/shared/lib">
			<include name="*.jar"/>
		</fileset>

		<pathelement location="/home/aleks/opt/java"/>
		<fileset dir="/home/aleks/opt/java">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Targets -->
	<target name="all" depends="clean,compile" description="Clean build and dist directories, then compile"/>

	<target name="clean"
			description="Delete old build and dist directories">
		<delete dir="${build.home}"/>
		<delete dir="${dist.home}"/>
	</target>

	<target name="gwt.compile" description="Compile AJAX with GWT">
		<echo>Compiling GWT classes. This may take some time...</echo>
		<exec executable="./WERTi-compile"/>
	</target>

	<target name="compile" depends="prepare" description="Compile Java sources">

		<mkdir    dir="${build.home}/WEB-INF/classes"/>
		<javac srcdir="${src.home}"
				destdir="${build.home}/WEB-INF/classes"
				debug="${compile.debug}"
				deprecation="${compile.deprecation}"
				target="${target.version}"
				optimize="${compile.optimize}">
			<classpath refid="compile.classpath"/>
		</javac>

		<!-- Copy application resources -->
		<copy  todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java"/>
		</copy>

	</target>

	<target name="dist" depends="compile,javadoc" description="Create binary distribution">

		<!-- Copy documentation subdirectories -->
		<mkdir   dir="${dist.home}/docs"/>
		<copy    todir="${dist.home}/docs">
			<fileset dir="${docs.home}"/>
		</copy>

		<!-- Create application JAR file -->
		<jar jarfile="${dist.home}/${app.name}-${app.version}.war" basedir="${build.home}"/>

		<!-- Copy additional files to ${dist.home} as necessary -->

	</target>

	<target name="install" depends="compile" description="Install application to servlet container">

		<deploy url="${manager.url}"
				username="${manager.username}"
				password="${manager.password}"
				path="${app.path}"
				localWar="file://${build.home}"/>

	</target>

	<target name="javadoc" depends="compile" description="Create Javadoc API documentation">

		<mkdir          dir="${dist.home}/docs/api"/>
		<javadoc sourcepath="${src.home}"
				destdir="${dist.home}/docs/api"
				packagenames="*">
			<classpath refid="compile.classpath"/>
		</javadoc>

	</target>

	<target name="list" description="List installed applications on servlet container">

		<list    url="${manager.url}"
				username="${manager.username}"
				password="${manager.password}"/>

	</target>

	<target name="prepare">

		<!-- Create build directories as needed -->
		<mkdir  dir="${build.home}"/>
		<mkdir  dir="${build.home}/WEB-INF"/>
		<mkdir  dir="${build.home}/WEB-INF/classes"/>

		<!-- Copy static content of this web application -->
		<copy todir="${build.home}">
			<fileset dir="${web.home}"/>
		</copy>

		<copy todir="${build.home}">
			<fileset dir="desc"/>
		</copy>
	</target>

	<!-- Reload Target -->

	<target name="reload" depends="compile" description="Reload application on servlet container">
		<exec executable="touch">
			<arg value="bin/WEB-INF/web.xml"/>
		</exec>
	</target>

	<target name="remove" description="Remove application on servlet container">

		<undeploy url="${manager.url}"
				username="${manager.username}"
				password="${manager.password}"
				path="${app.path}"/>

	</target>

</project>
